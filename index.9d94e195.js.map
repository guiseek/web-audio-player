{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-c91cb1ba40a70dbb.js","node_modules/@parcel/runtime-js/lib/runtime-c7ef47d1fc00bd23.js","node_modules/@parcel/runtime-js/lib/runtime-113ee9eb02833d0c.js","src/main.ts","node_modules/@parcel/runtime-js/lib/runtime-2b78f14355bbad53.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"l53ZJ\\\":\\\"index.9d94e195.js\\\",\\\"c8GOh\\\":\\\"SoundHelix-Song-1.3a87d076.mp3\\\",\\\"1Axcj\\\":\\\"SoundHelix-Song-2.2c8899eb.mp3\\\",\\\"gyL46\\\":\\\"SoundHelix-Song-3.0f2a5557.mp3\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"c8GOh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1Axcj\")).toString();","function inicializa() {\n  const audio = new Audio();\n  const selectKeys = ['Enter', 'Space'];\n  \n  let tocandoAgora = 0;\n  \n  let barsColor = '#0084ff';\n\n  // Seleciona os elementos com querySelector\n  const form = document.querySelector('form');\n  const em = document.querySelector('em');\n  const select = document.querySelector('select');\n  const canvas = document.querySelector('canvas');\n  const playIcon = document.querySelector<SVGAElement>('#play-icon');\n  const pauseIcon = document.querySelector<SVGElement>('#pause-icon');\n\n  // Usado pra capturar botões\n  function getButton(id: string) {\n    return form?.querySelector<HTMLButtonElement>('#' + id);\n  }\n\n  // Usado pra capturar controles\n  function getInput(id: string) {\n    return form?.querySelector<HTMLInputElement>('#' + id);\n  }\n\n  // Captura botões\n  const play = getButton('play');\n  const anterior = getButton('anterior');\n  const proxima = getButton('proxima');\n\n  const tempo = getInput('tempo');\n  const volume = getInput('volume');\n  const color = getInput('color');\n\n  // Interface da música\n  interface AudioTrack {\n    artist: string;\n    title?: string;\n    album?: string;\n    year?: number;\n    url: string;\n  }\n\n  // Playlist\n  const listaDeMusicas: AudioTrack[] = [\n    { url: new URL('./assets/SoundHelix-Song-1.mp3', import.meta.url).pathname, artist: 'SoundHelix Song 1' },\n    { url: new URL('./assets/SoundHelix-Song-2.mp3', import.meta.url).pathname, artist: 'SoundHelix Song 2' },\n    { url: new URL('./assets/SoundHelix-Song-3.mp3', import.meta.url).pathname, artist: 'SoundHelix Song 3' },\n  ];\n\n  // Adiciona músicas no select\n  listaDeMusicas.forEach((musica, numero) => {\n    select.add(new Option(musica.artist, `${numero}`));\n  });\n\n  // Atualiza o slider conforme o audio\n  audio.ontimeupdate = () => {\n    if (tempo) {\n      tempo.value = audio.currentTime.toString();\n\n      const s = tempo.valueAsNumber % 60 | 0;\n      const m = (tempo.valueAsNumber / 60) % 60 | 0;\n      tempo.nextElementSibling!.textContent = `${m < 10 ? '0' : ''}${m}:${\n        s < 10 ? '0' : ''\n      }${s}`;\n    }\n  };\n\n  color.value = barsColor;\n\n  color.oninput = () => {\n    barsColor = color.value;\n    document.documentElement.style.setProperty('--color-primary', barsColor);\n  };\n\n  audio.onloadedmetadata = () => {\n    tempo.max = `${audio.duration}`;\n  };\n\n  // Ao arrastar o slider, sincroniza o audio\n  tempo.oninput = () => {\n    audio.currentTime = tempo.valueAsNumber;\n  };\n\n  // Ao arrastar o slider, altera o volume\n  volume.oninput = () => {\n    audio.volume = volume.valueAsNumber / 100;\n\n    volume.nextElementSibling!.textContent = `${volume.valueAsNumber}%`;\n  };\n\n  // Esconde o play e mostra o pause\n  audio.onplay = () => {\n    frameLooper();\n\n    playIcon.style.display = 'none';\n    pauseIcon.style.display = 'block';\n    \n    em.textContent = listaDeMusicas[tocandoAgora].artist;\n  };\n\n  // Esconde o pause e mostra o play\n  audio.onpause = () => {\n    playIcon.style.display = 'block';\n    pauseIcon.style.display = 'none';\n  };\n\n  // Ao clicar no play, toca a música\n  play.onclick = () => {\n    // Se não tiver nada selecionado\n    if (!select.value) {\n      // Toca a primeira música\n      select.value = '0';      \n      listaDeMusicas[+select.value].url;\n    }\n\n    // Se não tiver nada tocando, da play\n    if (audio.paused) {\n      audio.play();\n      // Se estiver tocando, pausa\n    } else {\n      audio.pause();\n    }\n  };\n\n  // Ao clicar no anterior, toca a música anterior\n  anterior.onclick = () => {\n    // Se a música selecionada não for a primeira da lista\n    if (tocandoAgora > 0) {\n      // Toca a música anterior\n      tocandoAgora--;\n\n      // Se for a primeira da lista, toca a última\n    } else {\n      tocandoAgora = listaDeMusicas.length - 1;\n    }\n\n    select.value = `${tocandoAgora}`;\n\n    audio.src = listaDeMusicas[tocandoAgora].url;\n    audio.play();\n  };\n\n  // Ao clicar no próxima, toca a próxima música\n  proxima.onclick = () => {\n    // Se a música selecionada não for a última da lista\n    if (tocandoAgora < listaDeMusicas.length - 1) {\n      // Toca a próxima música\n      tocandoAgora++;\n\n      // Se não for a última da lista, toca a primeira\n    } else {\n      tocandoAgora = 0;\n    }\n\n    select.value = `${tocandoAgora}`;\n\n    audio.src = listaDeMusicas[tocandoAgora].url;\n    audio.play();\n  };\n\n  // Ao dar 2 cliques em uma música, toca a música\n  select.ondblclick = () => trocaMusica();\n\n  /**\n   * Verifica se a tecla pressionada faz parte da lista\n   * que definimos como teclas selecionáveis.\n   * Caso seja verdade, toca a música.\n   */\n  select.onkeydown = (event) => {\n    if (selectKeys.includes(event.code)) {\n      trocaMusica();\n    }\n  };\n\n  function trocaMusica() {\n    // O + converte str pra int\n    const numero = +select.value;\n\n    audio.src = listaDeMusicas[numero].url;\n    audio.play();\n\n    tocandoAgora = numero;\n  }\n\n  /* ================================== */\n\n  const audioCtx = new AudioContext();\n  const canvasCtx = canvas.getContext('2d');\n\n  audio.src = listaDeMusicas[0].url;\n  audio.crossOrigin = 'anonymous';\n\n  const audioSourceNode = audioCtx.createMediaElementSource(audio);\n\n  const analyserNode = audioCtx.createAnalyser();\n  const bufferLength = analyserNode.frequencyBinCount;\n  const dataArray = new Uint8Array(bufferLength);\n\n  audioSourceNode.connect(analyserNode);\n  analyserNode.connect(audioCtx.destination);\n\n  let bars: number;\n  let barX: number;\n  let barWidth: number;\n  let barHeight: number;\n  \n  let render = () => {\n    canvas.width = innerWidth - 40;\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    canvasCtx.fillStyle = barsColor;\n    \n    bars = canvas.width;\n    \n    for (let i = 0; i < bars; i++) {\n      barWidth = canvas.width / bars;\n      barX = i * (barWidth + 2);\n      barHeight = -dataArray[i] / 1.6;\n      canvasCtx.fillRect(barX, canvas.height, barWidth, barHeight);\n    }\n  };\n\n  let frameLooper = () => {\n    requestAnimationFrame(frameLooper);\n    analyserNode.getByteFrequencyData(dataArray);\n    render();\n  };\n}\n\n\nlet loaded = false;\n\ndocument.onclick = () => {\n  if (!loaded) {\n    inicializa();\n  }\n  loaded = true;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gyL46\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b57b09796bbad116$exports","URL","resolve","import","meta","url","toString","$b923f3ba8c297e07$exports","$04177131cda29cd1$var$inicializa","audio","Audio","selectKeys","tocandoAgora","barsColor","form","document","querySelector","em","select","canvas","playIcon","pauseIcon","getButton","getInput","play","anterior","proxima","tempo","volume","color","listaDeMusicas","pathname","artist","$9d78173ae5361f6a$exports","trocaMusica","numero","value","src","forEach","musica","add","Option","ontimeupdate","currentTime","s","valueAsNumber","m","nextElementSibling","textContent","oninput","documentElement","style","setProperty","onloadedmetadata","max","duration","onplay","frameLooper","display","onpause","onclick","paused","pause","ondblclick","onkeydown","event","includes","code","audioCtx","AudioContext","canvasCtx","getContext","crossOrigin","audioSourceNode","createMediaElementSource","analyserNode","createAnalyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","bars","barX","barWidth","barHeight","connect","destination","requestAnimationFrame","getByteFrequencyData","width","innerWidth","clearRect","height","fillStyle","fillRect","render","$04177131cda29cd1$var$loaded"],"version":3,"file":"index.9d94e195.js.map"}