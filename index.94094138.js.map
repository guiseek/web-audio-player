{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-c91cb1ba40a70dbb.js","src/utilities/color.ts","src/utilities/query.ts","src/main.ts","src/utilities/cast.ts","node_modules/@parcel/runtime-js/lib/runtime-c7ef47d1fc00bd23.js","node_modules/@parcel/runtime-js/lib/runtime-113ee9eb02833d0c.js","node_modules/@parcel/runtime-js/lib/runtime-2b78f14355bbad53.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"l53ZJ\\\":\\\"index.94094138.js\\\",\\\"c8GOh\\\":\\\"SoundHelix-Song-1.3a87d076.mp3\\\",\\\"1Axcj\\\":\\\"SoundHelix-Song-2.2c8899eb.mp3\\\",\\\"gyL46\\\":\\\"SoundHelix-Song-3.0f2a5557.mp3\\\"}\"));","const hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\ntype ColorArrayType = [number, number, number, number];\ntype ColorStyleType = `rgb(${number} ${number} ${number}${string})`;\ntype ColorObjectType = {\n  red: number;\n  green: number;\n  blue: number;\n  alpha?: number;\n};\n\ntype ColorReturnType = ColorArrayType | ColorObjectType | ColorStyleType;\n\ntype ColorFormatType = 'array' | 'object' | 'style';\n\nexport function hexToRgb(\n  hex: string,\n  options?: { alpha?: number; format: 'array' }\n): ColorArrayType;\n\nexport function hexToRgb(\n  hex: string,\n  options?: { alpha?: number; format: 'style' }\n): ColorStyleType;\n\nexport function hexToRgb(\n  hex: string,\n  options?: { alpha?: number; format: 'object' }\n): ColorObjectType;\n\nexport function hexToRgb(\n  hex: string,\n  options: { alpha?: number; format: ColorFormatType } = {\n    alpha: 1,\n    format: 'array',\n  }\n): ColorReturnType {\n  if (\n    typeof hex !== 'string' ||\n    nonHexChars.test(hex) ||\n    !validHexSize.test(hex)\n  ) {\n    throw new TypeError('Expected a valid hex string');\n  }\n\n  hex = hex.replace(/^#/, '');\n\n  let alphaFromHex = 1;\n\n  if (hex.length === 8) {\n    alphaFromHex = parseInt(hex.slice(6, 8), 16) / 255;\n    hex = hex.slice(0, 6);\n  }\n\n  if (hex.length === 4) {\n    alphaFromHex = parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n    hex = hex.slice(0, 3);\n  }\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n\n  const number = parseInt(hex, 16);\n  const red = number >> 16;\n  const green = (number >> 8) & 255;\n  const blue = number & 255;\n  const alpha =\n    typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n  if (options.format === 'array') {\n    return [red, green, blue, alpha];\n  }\n\n  if (options.format === 'style') {\n    const alphaString = alpha === 1 ? '' : ` / ${+(alpha * 100).toFixed(2)}%`;\n    return `rgb(${red} ${green} ${blue}${alphaString})`;\n  }\n\n  return { red, green, blue, alpha };\n}\n\nexport function rgbToHex({ red, green, blue, alpha = 1 }: ColorObjectType) {\n  const alphaString = alpha === 1 ? '' : ` / ${+(alpha * 100).toFixed(2)}%`;\n  return `rgb(${red} ${green} ${blue}${alphaString})`;\n}\n\n\nexport function setPaletteColor(property: string, value: string) {\n  document.documentElement.style.setProperty(`--${property}`, value);\n}","import { castArrayToObject } from './cast';\n\nexport function queryElement<\n  K extends keyof (HTMLElementTagNameMap | SVGElementTagNameMap)\n>(\n  selector: K | string,\n  parent: Document | HTMLElement | SVGElement = document\n) {\n  return parent.querySelector(selector);\n}\n\nexport function queryGroupBySelector<R extends Record<keyof R, R[keyof R]>>(\n  selectors: Record<keyof R, string>\n) {\n  const keySelectorMap = Object.entries(selectors);\n\n  const mapFn = ([key, selector]) => ({ [key]: queryElement(selector) });\n\n  return castArrayToObject(keySelectorMap.map(mapFn)) as R;\n}\n","import { hexToRgb, rgbToHex, setPaletteColor } from './utilities/color';\nimport { queryGroupBySelector } from './utilities/query';\nimport { PlayerElements } from './types/elements';\n\nconst elCtrl = queryGroupBySelector<PlayerElements>({\n  em: 'em',\n  form: 'form',\n  play: '#play',\n  prev: '#prev',\n  next: '#next',\n  time: '#time',\n  color: '#color',\n  canvas: 'canvas',\n  select: 'select',\n  volume: '#volume',\n  colorRange: '#color-range',\n  playIcon: '#play svg > use',\n});\n\nconst configColor = {\n  range: {\n    min: 0,\n    max: 1530\n  },\n  step: 1,\n  initial: { red: 255, green: 0, blue: 0 },\n  sequence: [\n    { min: 0, max: 255, key: 'blue', dir: 'up', value: { red: 255, green: 0, blue: 0 } },\n    { min: 256, max: 510, key: 'red', dir: 'down', value: { red: 255, green: 0, blue: 255 } },\n    { min: 511, max: 765, key: 'green', dir: 'up', value: { red: 0, green: 0, blue: 255 }  },\n    { min: 766, max: 1020, key: 'blue', dir: 'down', value: { red: 0, green: 255, blue: 255 } },\n    { min: 1021, max: 1275, key: 'red', dir: 'up', value: { red: 0, green: 255, blue: 0 } },\n    { min: 1276, max: 1530, key: 'green', dir: 'down', value: { red: 255, green: 255, blue: 0 } },\n  ]\n}\n\nelCtrl.colorRange.step = `${configColor.step}`;\nelCtrl.colorRange.min = `${configColor.range.min}`;\nelCtrl.colorRange.max = `${configColor.range.max}`;\nelCtrl.colorRange.value = `${configColor.range.min}`;\n\nelCtrl.colorRange.oninput = () => {\n  const value = elCtrl.colorRange.valueAsNumber;\n  \n  const step = configColor.sequence.find(({ min, max }) => value >= min && value <= max);  \n  \n  const color = hexToRgb(elCtrl.color.value, { format: 'object' });\n  \n  if (step && color) {\n    if (step.dir === 'up') {\n      color[step.key] = step.value[step.key] + (value - step.min);\n    } else {\n      color[step.key] = step.value[step.key] - (value - step.min);\n    }\n\n    setPaletteColor('color-primary', rgbToHex(color));\n  }\n}\n\n\n\nfunction inicializa() {\n  const audio = new Audio();\n  const selectKeys = ['Enter', 'Space'];\n\n  let tocandoAgora = 0;\n\n  let barsColor = '#0084ff';\n\n  // Interface da música\n  interface AudioTrack {\n    artist: string;\n    title?: string;\n    album?: string;\n    year?: number;\n    url: string;\n  }\n\n  // Playlist\n  const listaDeMusicas: AudioTrack[] = [\n    {\n      url: new URL('./assets/SoundHelix-Song-1.mp3', import.meta.url).pathname,\n      artist: 'SoundHelix Song 1',\n    },\n    {\n      url: new URL('./assets/SoundHelix-Song-2.mp3', import.meta.url).pathname,\n      artist: 'SoundHelix Song 2',\n    },\n    {\n      url: new URL('./assets/SoundHelix-Song-3.mp3', import.meta.url).pathname,\n      artist: 'SoundHelix Song 3',\n    },\n  ];\n\n  // Adiciona músicas no select\n  listaDeMusicas.forEach((musica, numero) => {\n    elCtrl.select.add(new Option(musica.artist, `${numero}`));\n  });\n\n  // Atualiza o slider conforme o audio\n  audio.ontimeupdate = () => {\n    if (elCtrl.time) {\n      elCtrl.time.value = audio.currentTime.toString();\n\n      const s = elCtrl.time.valueAsNumber % 60 | 0;\n      const m = (elCtrl.time.valueAsNumber / 60) % 60 | 0;\n      elCtrl.time.nextElementSibling!.textContent = `${m < 10 ? '0' : ''\n        }${m}:${s < 10 ? '0' : ''}${s}`;\n    }\n  };\n\n  elCtrl.color.value = barsColor;\n\n  elCtrl.color.oninput = () => {\n    barsColor = elCtrl.color.value;\n    document.documentElement.style.setProperty('--color-primary', barsColor);\n  };\n\n  audio.onloadedmetadata = () => {\n    elCtrl.time.max = `${audio.duration}`;\n  };\n\n  // Ao arrastar o slider, sincroniza o audio\n  elCtrl.time.oninput = () => {\n    audio.currentTime = elCtrl.time.valueAsNumber;\n  };\n\n  // Ao arrastar o slider, altera o volume\n  elCtrl.volume.oninput = () => {\n    audio.volume = elCtrl.volume.valueAsNumber / 100;\n\n    elCtrl.volume.nextElementSibling!.textContent = `${elCtrl.volume.valueAsNumber}%`;\n  };\n\n  // const playIcon = elCtrl.play.querySelector<SVGUseElement>('svg > use');\n\n  // Esconde o play e mostra o pause\n  audio.onplay = () => {\n    frameLooper();\n\n    elCtrl.playIcon.href.baseVal = '#pause-symbol';\n\n    elCtrl.em.textContent = listaDeMusicas[tocandoAgora].artist;\n  };\n\n  // Esconde o pause e mostra o play\n  audio.onpause = () => {\n    elCtrl.playIcon.href.baseVal = '#play-symbol';\n  };\n\n  // Ao clicar no play, toca a música\n  elCtrl.play.onclick = () => {\n    // Se não tiver nada selecionado\n    if (!elCtrl.select.value) {\n      // Toca a primeira música\n      elCtrl.select.value = '0';\n      listaDeMusicas[+elCtrl.select.value].url;\n    }\n\n    // Se não tiver nada tocando, da play\n    if (audio.paused) {\n      audio.play();\n      // Se estiver tocando, pausa\n    } else {\n      audio.pause();\n    }\n  };\n\n  // Ao clicar no anterior, toca a música anterior\n  elCtrl.prev.onclick = () => {\n    // Se a música selecionada não for a primeira da lista\n    if (tocandoAgora > 0) {\n      // Toca a música anterior\n      tocandoAgora--;\n\n      // Se for a primeira da lista, toca a última\n    } else {\n      tocandoAgora = listaDeMusicas.length - 1;\n    }\n\n    elCtrl.select.value = `${tocandoAgora}`;\n\n    audio.src = listaDeMusicas[tocandoAgora].url;\n    audio.play();\n  };\n\n  // Ao clicar no próxima, toca a próxima música\n  elCtrl.next.onclick = () => {\n    // Se a música selecionada não for a última da lista\n    if (tocandoAgora < listaDeMusicas.length - 1) {\n      // Toca a próxima música\n      tocandoAgora++;\n\n      // Se não for a última da lista, toca a primeira\n    } else {\n      tocandoAgora = 0;\n    }\n\n    elCtrl.select.value = `${tocandoAgora}`;\n\n    audio.src = listaDeMusicas[tocandoAgora].url;\n    audio.play();\n  };\n\n  // Ao dar 2 cliques em uma música, toca a música\n  elCtrl.select.ondblclick = () => trocaMusica();\n\n  /**\n   * Verifica se a tecla pressionada faz parte da lista\n   * que definimos como teclas selecionáveis.\n   * Caso seja verdade, toca a música.\n   */\n  elCtrl.select.onkeydown = (event) => {\n    if (selectKeys.includes(event.code)) {\n      trocaMusica();\n    }\n  };\n\n  function trocaMusica() {\n    // O + converte str pra int\n    const numero = +elCtrl.select.value;\n\n    audio.src = listaDeMusicas[numero].url;\n    audio.play();\n\n    tocandoAgora = numero;\n  }\n\n  /* ================================== */\n\n  const audioCtx = new AudioContext();\n  const canvasCtx = elCtrl.canvas.getContext('2d');\n\n  audio.src = listaDeMusicas[0].url;\n  audio.crossOrigin = 'anonymous';\n\n  const audioSourceNode = audioCtx.createMediaElementSource(audio);\n\n  const analyserNode = audioCtx.createAnalyser();\n  const bufferLength = analyserNode.frequencyBinCount;\n  const dataArray = new Uint8Array(bufferLength);\n\n  audioSourceNode.connect(analyserNode);\n  analyserNode.connect(audioCtx.destination);\n\n  let bars: number;\n  let barX: number;\n  let barWidth: number;\n  let barHeight: number;\n\n  let render = () => {\n    elCtrl.canvas.width = innerWidth - 40;\n\n    if (canvasCtx) {\n      canvasCtx.clearRect(0, 0, elCtrl.canvas.width, elCtrl.canvas.height);\n      canvasCtx.fillStyle = barsColor;\n\n      bars = elCtrl.canvas.width;\n\n      for (let i = 0; i < bars; i++) {\n        barWidth = elCtrl.canvas.width / bars;\n        barX = i * (barWidth + 2);\n        barHeight = -dataArray[i] / 1.6;\n        canvasCtx.fillRect(barX, elCtrl.canvas.height, barWidth, barHeight);\n      }\n    }\n  };\n\n  let frameLooper = () => {\n    requestAnimationFrame(frameLooper);\n    analyserNode.getByteFrequencyData(dataArray);\n    render();\n  };\n}\n\nlet loaded = false;\n\ndocument.onclick = () => {\n  if (!loaded) {\n    inicializa();\n  }\n  loaded = true;\n};\n","export function castArrayToObject<T>(array: T[]) {\n  return array.reduce((acc, curr) => ({ ...acc, ...curr }), {});\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"c8GOh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1Axcj\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gyL46\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$73a9d973d0088346$var$nonHexChars","RegExp","$73a9d973d0088346$var$validHexSize","$b14f56d83984b735$export$b13c486faa984ec0","selector","parent","document","querySelector","$04177131cda29cd1$var$elCtrl","selectors","em","form","play","prev","next","time","color","canvas","select","volume","colorRange","playIcon","entries","map","key","reduce","acc","curr","$04177131cda29cd1$var$configColor","range","min","max","step","initial","red","green","blue","sequence","dir","value","oninput","valueAsNumber","find","hex","options","alpha","format","test","TypeError","alphaFromHex","replace","parseInt","slice","repeat","number","toFixed","$73a9d973d0088346$export$5a544e13ad4e1fa5","property","documentElement","style","setProperty","$73a9d973d0088346$export$abbdbc9a02d44073","$73a9d973d0088346$export$34d09c4a771c46ef","$b57b09796bbad116$exports","URL","resolve","import","meta","url","toString","$b923f3ba8c297e07$exports","$04177131cda29cd1$var$inicializa","audio","Audio","selectKeys","tocandoAgora","barsColor","listaDeMusicas","pathname","artist","$9d78173ae5361f6a$exports","trocaMusica","numero","src","forEach","musica","add","Option","ontimeupdate","currentTime","s","m","nextElementSibling","textContent","onloadedmetadata","duration","onplay","frameLooper","href","baseVal","onpause","onclick","paused","pause","ondblclick","onkeydown","event","includes","code","audioCtx","AudioContext","canvasCtx","getContext","crossOrigin","audioSourceNode","createMediaElementSource","analyserNode","createAnalyser","bufferLength","frequencyBinCount","dataArray","Uint8Array","bars","barX","barWidth","barHeight","connect","destination","requestAnimationFrame","getByteFrequencyData","width","innerWidth","clearRect","height","fillStyle","fillRect","render","$04177131cda29cd1$var$loaded"],"version":3,"file":"index.94094138.js.map"}